// const select = document.querySelector(`select`);
// select.addEventListener(`change`, e => {
//     let selectedOption = e.target.value; // select.value;

//     let option = select.querySelector(`option[value="${selectedOption}"]`);
//     // option.disabled = true;
    
//     option.setAttribute(`disabled`, `false`);
// });

// async/await

// const getFile = url => fetch(url)
//     .then(data => data.ok ? data.json() : Promise.catch(data.statusText))

// getFile(`https://jsonplaceholder.typicode.com/users`)
//     .then(data => console.log(data))
//     .catch(err => console.error(err));

// console.log(`before`);

// // function myFunc(){
// //     return new Promise(resolve => resolve(`hello`));
// // }

// const getFile = async url => {
//     let request = await fetch(url);
//     let response = request.ok ? request.json() : Promise.catch(request.statusText);
    
//     return response;
// }

// // getFile(`https://jsonplaceholder.typicode.com/users`)
// //     .then(data => console.log(data))
// //     .catch(err => console.log(err));

// (async () => {
//     try{
//         // Promise
//         //     .all([
//         //         getFile(`https://jsonplaceholder.typicode.com/users/1`),
//         //         getFile(`https://jsonplaceholder.typicode.com/users/2`),
//         //         getFile(`https://jsonplaceholder.typicode.com/users/3`),
//         //     ])
//         //     .then(data => console.log(data))
//         //     .then(async () => {
//         //         let users = await getFile(`https://jsonplaceholder.typicode.com/users`);
//         //         console.log(users);

//         //         console.log(`hello world`);
//         //     })

//         let threeUsers = await Promise
//             .all([
//                 getFile(`https://jsonplaceholder.typicode.com/users/1`),
//                 getFile(`https://jsonplaceholder.typicode.com/users/2`),
//                 getFile(`https://jsonplaceholder.typicode.com/users/3`),
//             ]);
        
//         console.log(threeUsers);
        
//         let users = await getFile(`https://jsonplaceholder.typicode.com/users`);
//         console.log(users);

//         console.log(`hello world`);
//     } catch(err){
//         console.log(`In catch: ${err}`);
//     }
// })();

// console.log(`after`);

// try/catch/finally

// METHOD
// 	GET ‚Äì –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
// 	POST * ‚Äì –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä –≤ —Ç–µ–ª–µ –∑–∞–ø—Ä–æ—Å–∞ (body)
// 	PUT * ‚Äì –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä –≤ —Ç–µ–ª–µ –∑–∞–ø—Ä–æ—Å–∞ (–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–∞)
// 	PATCH * ‚Äì –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä –≤ —Ç–µ–ª–µ –∑–∞–ø—Ä–æ—Å–∞
// 	DELETE

// HEADERS ‚Äì —Å–ª—É–∂–µ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–∫–æ–¥–∏—Ä–æ–≤–∫–∞, —Å–∂–∞—Ç–∏–µ, —Å–µ—Ä–≤–µ—Ä, –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ)

// STATUS
// 	100
// 		101

// 	200
// 		201
// 		204

// 	300
// 		301
// 		302

// 	400 ‚Äì –æ—à–∏–±–∫–∞ –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ
// 		401
// 		403
// 		404

// 	500 ‚Äì –æ—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
// 		502
// 		503

// https://jsonplaceholder.typicode.com/

// REST ‚Äì –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∫–ª–∏–µ–Ω—Ç-—Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
// —Å–≤–æ–¥ –ø—Ä–∞–≤–∏–ª (—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π), –ø–æ –∫–æ—Ç–æ—Ä—ã–º –∫–ª–∏–µ–Ω—Ç (web app, mobile app) –∏ —Å–µ—Ä–≤–µ—Ä –¥–æ–ª–∂–Ω—ã –º–µ–∂–¥—É —Å–æ–±–æ–π –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å

// REST –≥–æ–≤–æ—Ä–∏—Ç, —á—Ç–æ –Ω—É–∂–Ω–æ –¥—É–º–∞—Ç—å –æ –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∫–∞–∫ –æ —Ä–µ—Å—É—Ä—Å–µ.
// –£ –∫–∞–∂–¥–æ–≥–æ —Ä–µ—Å—É—Ä—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –µ—Å—Ç—å —Å–≤–æ–π URL. 

// LIST ‚Äì GET /posts // ‚Äì –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–µ—Å—É—Ä—Å posts
// ITEM ‚Äì GET /posts/:id // ‚Äì –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–µ—Å—É—Ä—Å posts —Å :id

// ADD ‚Äì POST /posts     body:{name: Alex, age: 21} // ‚Äì –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–µ—Å—É—Ä—Å posts c —Ç–µ–ª–æ–º –∑–∞–ø—Ä–æ—Å–∞, id –≤—Å–µ–≥–¥–∞ –Ω–∞–∑–Ω–∞—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å–µ—Ä–≤–µ—Ä
// <== {id: 101, name: Alex, age: 21}

// FULL UPDATE ‚Äì PUT /posts/:id  body:{name: Ivan} // –≤ body –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤—Å–µ –ø–æ–ª—è –æ–±—ä–µ–∫—Ç–∞
// <== {id: 101, name: Ivan}

// PARTIAL UPDATE ‚Äì PATCH /posts/:id body:{name: ''} // –≤ body –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
// <== {id: 101, name: '', age: 21}

// DELETE ‚Äì /posts/:id
// <== {}

// REST

// RESTfull Api ‚Äì —Å—Ñ–µ—Ä–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—å –≤ –≤–∞–∫—É—É–º–µ üòå

// https://mockapi.io/

// fetch(`https://jsonplaceholder.typicode.com/users`)
//     .then(data => data.json())
//     .then(data => console.log(data))
//     .then(() => 
//         fetch(
//             `https://jsonplaceholder.typicode.com/users`, 
//             {
//                 method: `POST`,
//                 body: JSON.stringify({name: `Dmytro`, age: 25}),
//                 headers: {
//                     "content-type": "application/json; charset=utf-8"
//                 }
//             }
//         )
//     )
//     .then(data => data.json())
//     .then(data => console.log(data))
//     .then(() => fetch(`https://jsonplaceholder.typicode.com/users`))
//     .then(data => data.json())
//     .then(data => console.log(data))

// fetch(`https://jsonplaceholder.typicode.com/users/1`)
//     .then(data => data.json())
//     .then(user => {
//         console.log(user);
//         return user;
//     })
//     .then(user => {
//         // user.username = `Katya`;
//         return fetch(
//             `https://jsonplaceholder.typicode.com/users/1`, 
//             {
//                 method: `PUT`,
//                 body: JSON.stringify(Object.assign(user, {username: `Katya`})),
//                 headers: {
//                     "content-type": "application/json; charset=utf-8"
//                 }
//             }
//         )
//     })
//     .then(data => data.json())
//     .then(data => console.log(data))

// fetch(`https://jsonplaceholder.typicode.com/users/1`)
//     .then(data => data.json())
//     .then(user => console.log(user))
//     .then(() => {
//         return fetch(
//             `https://jsonplaceholder.typicode.com/users/1`, 
//             {
//                 method: `PATCH`,
//                 body: JSON.stringify({username: `Katya`}),
//                 headers: {
//                     "content-type": "application/json; charset=utf-8"
//                 }
//             }
//         )
//     })
//     .then(data => data.json())
//     .then(data => console.log(data))

// fetch(`https://jsonplaceholder.typicode.com/users/1`)
//     .then(data => data.json())
//     .then(user => console.log(user))
//     .then(() => {
//         return fetch(
//             `https://jsonplaceholder.typicode.com/users/1`, 
//             {
//                 method: `DELETE`
//             }
//         )
//     })
//     .then(data => data.json())
//     .then(data => console.log(data))


// const getFile = url => fetch(url)
//     .then(data => data.ok ? data.json() : Promise.catch(dara.statusText));

const controller = async (url, method=`GET`, obj) => {
    let options = {
        method: method,
        headers: {
            "content-type": "application/json; charset=utf-8"
        }
    }

    if(obj) options.body = JSON.stringify(obj);
    
    let request = await fetch(url, options),
        response = request.ok ? request.json() : Promise.catch(request.statusText);

    return response;
}

// controller(`https://jsonplaceholder.typicode.com/users`, `POST`, {username: `Anna`})
//     .then(data => {
//         console.log(`Add new user, method POST`, data);
//     })
//     .then(() => controller(`https://jsonplaceholder.typicode.com/users/1`))
//     .then(data => {
//         console.log(`Get user with id:1, method GET`, data);
//     })
//     .then(() => controller(`https://jsonplaceholder.typicode.com/users/1`, `PUT`, {username: `Katya`}))
//     .then(data => {
//         console.log(`Change user with id:1, method PUT`, data);
//     })
//     .then(() => controller(`https://jsonplaceholder.typicode.com/users/1`, `PATCH`, {username: `Katya`}))
//     .then(data => {
//         console.log(`Change user with id:1, method PATCH`, data);
//     })
//     .then(() => controller(`https://jsonplaceholder.typicode.com/users/1`, `DELETE`))
//     .then(data => {
//         console.log(`Delete user with id:1, method DELETE`, data);
//     })
//     .catch(err => console.log(`In catch: ${err}`));

// or async/await

(async () => {
    try{
        let newUser = await controller(`https://jsonplaceholder.typicode.com/users`, `POST`, {username: `Anna`});
        console.log(`Add new user, method POST`, newUser);

        let userFirst = await controller(`https://jsonplaceholder.typicode.com/users/1`);
        console.log(`Get user with id:1, method GET`, userFirst);

        let userFirstPUT = await controller(`https://jsonplaceholder.typicode.com/users/1`, `PUT`, {username: `Katya`});
        console.log(`Change user with id:1, method PUT`, userFirstPUT);

        let userFirstPATCH = await controller(`https://jsonplaceholder.typicode.com/users/1`, `PATCH`, {username: `Katya`});
        console.log(`Change user with id:1, method PATCH`, userFirstPATCH);

        let userDeleted = await controller(`https://jsonplaceholder.typicode.com/users/1`, `DELETE`);
        console.log(`Delete user with id:1, method DELETE`, userDeleted);

    } catch(err){
        console.log(`In catch: ${err}`);
    }
})();